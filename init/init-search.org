* multiple-cursors
https://github.com/magnars/multiple-cursors.el
#+BEGIN_SRC emacs-lisp
  (require-package 'multiple-cursors)
  (require 'multiple-cursors)
#+END_SRC
** evil-mc
#+BEGIN_SRC emacs-lisp
  (require-package 'evil-mc)
  (require 'evil-mc)

  (defun slegetank/evil-mc-enable ()
    (interactive)
    "Enable multiple-cursors mode in evil"
    (evil-mc-mode 1)
    (evil-mc-make-all-cursors)
    (message "Enter multi cursors mode."))

  (defun slegetank/evil-mc-quit ()
    (interactive)
    "Disaable multiple-cursors mode in evil"
    (evil-mc-mode -1)
    (evil-mc-undo-all-cursors)
    (message "Quit multi cursors mode."))

  (evil-define-key 'normal evil-mc-key-map (kbd "C-g") 'slegetank/evil-mc-quit)
  (evil-define-key 'normal evil-mc-key-map (kbd "<escape>") 'slegetank/evil-mc-quit)
#+END_SRC
* ivy
https://github.com/abo-abo/swiper
ivy是强大的查找文件、搜索代码、执行命令的补全工具。
** ivy
#+BEGIN_SRC emacs-lisp
  (require-package 'ivy)
  (ivy-mode 1)
  (global-set-key (kbd "M-x") 'counsel-M-x)
#+END_SRC
swiper提供了更优美的单文件搜索功能，支持正则：
** swiper
#+BEGIN_SRC emacs-lisp
  (require-package 'swiper)
  (require'swiper)

  (setq counsel-find-file-at-point t)
  (setq ivy-use-virtual-buffers t)
  (setq enable-recursive-minibuffers t)
  (setq ivy-display-style 'fancy)
  (setq ivy-initial-inputs-alist nil)

  (define-key ivy-minibuffer-map (kbd "C-j") 'ivy-next-line)
  (define-key ivy-minibuffer-map (kbd "C-k") 'ivy-previous-line)
#+END_SRC

swiper还提供了询问替换的功能，y替换，n不变，!全部替换:
#+BEGIN_SRC emacs-lisp
  (define-key swiper-map (kbd "s-r") 'swiper-query-replace)
#+END_SRC

** edit
swiper+wgrep or counsel+wgrep 可以实现对单文件以及工程内文件的替换、编辑：
#+BEGIN_SRC emacs-lisp
  (defun slegetank/ivy-occur-edit ()
    (interactive)
    "Easier way to edit occur buffer"
    (dolist (buffer (buffer-list))
      (let ((name (buffer-name buffer)))
        (when (and (get-buffer-window name 'visible)
                   (string-match "^\\*ivy-occur " name))
          (with-current-buffer buffer
            ;; (ivy-wgrep-change-to-wgrep-mode)

            (evil-define-key 'normal wgrep-mode-map (kbd "q") (lambda ()
                                                                (interactive)
                                                                (wgrep-exit)
                                                                (kill-buffer)
                                                                (delete-window (selected-window))))
            (define-key wgrep-mode-map (kbd "C-c C-c") (lambda ()
                                                         (interactive)
                                                         (wgrep-finish-edit)
                                                         (kill-buffer)
                                                         (delete-window (selected-window))))
            (define-key wgrep-mode-map (kbd "C-c C-k") (lambda ()
                                                         (interactive)
                                                         (wgrep-abort-changes)
                                                         (kill-buffer)
                                                         (delete-window (selected-window)))))))))

  (add-hook 'ivy-occur-grep-mode-hook (lambda () (interactive)
                                        (run-with-timer 0.1 nil 'slegetank/ivy-occur-edit)))

  (define-key ivy-mode-map (kbd "s-o") 'ivy-occur)
#+END_SRC

* avy
** avy
#+BEGIN_SRC emacs-lisp
  (require-package 'avy)
#+END_SRC

* ace-pinyin
通过提示键进行当前屏幕内的跳转,支持中文：
#+BEGIN_SRC emacs-lisp
  (require-package 'ace-jump-mode)
  (require-package 'ace-pinyin)
  (require 'ace-pinyin)
  (setq ace-pinyin-use-avy nil)
  (ace-pinyin-global-mode +1)
#+END_SRC
* anzu
在使用普通搜索功能时在状态栏显示匹配数目：
#+BEGIN_SRC emacs-lisp
  (require-package 'anzu)
  (global-anzu-mode +1)
#+END_SRC
** evil-anzu
#+BEGIN_SRC emacs-lisp
  (require-package 'evil-anzu)
  (with-eval-after-load 'evil
    (require 'evil-anzu))
#+END_SRC
* wgrep
可以用来编辑grep buffer并且将其应用到实际环境中；即以编辑文本的方式编辑实际功能，类似于wdired
#+BEGIN_SRC emacs-lisp
  (require-package 'wgrep)
  (require 'wgrep)

  ;; 编辑完自动保存
  (setq wgrep-auto-save-buffer t)

  (evil-define-key 'normal ivy-occur-grep-mode-map (kbd "e") 'ivy-wgrep-change-to-wgrep-mode)
  (evil-define-key 'normal ivy-occur-grep-mode-map (kbd "x") 'winnow-exclude-lines)
  (evil-define-key 'normal ivy-occur-grep-mode-map (kbd "m") 'winnow-match-lines)
  (evil-define-key 'normal ivy-occur-mode-map (kbd "q") (lambda ()
                                                          (interactive)
                                                          (kill-buffer)
                                                          (delete-window (selected-window))))

#+END_SRC
* winnow
#+BEGIN_SRC emacs-lisp
  (require-package 'winnow)
  (add-hook 'compilation-mode-hook 'winnow-mode)
  (add-hook 'ag-mode-hook 'winnow-mode)
#+END_SRC
* keys
ivy for 2 helper functions:
#+BEGIN_SRC emacs-lisp
  ;; help
  (define-key 'help-command (kbd "v") 'counsel-describe-variable)
  (define-key 'help-command (kbd "f") 'counsel-describe-function)
#+END_SRC

#+BEGIN_SRC emacs-lisp
  (define-key evil-normal-state-map (kbd "s-f") 'swiper)
  (define-key evil-normal-state-map (kbd "s-m") 'slegetank/evil-mc-enable)
  (define-key evil-normal-state-map (kbd "s-g") 'ace-jump-char-mode)
#+END_SRC
