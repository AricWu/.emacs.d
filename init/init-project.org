* packages
projectile是ag在EMACS中的前端配置包，counsel是ivy对它的进一步封装。在此之前，请先安装https://github.com/ggreer/the_silver_searcher ；在mac上也就是brew install the_silver_searcher。
** counsel-projectile
#+BEGIN_SRC emacs-lisp
  (require-package 'counsel-projectile)
  (require 'counsel-projectile)
  (add-to-list 'grep-find-ignored-files "bundle.js")
  (counsel-projectile-on)
#+END_SRC

* custom
counsel定义的工程搜索在git工程中默认使用.gitignore，而不是.projectile，一般情况下是可以的，但是对于webpack的工程由于bundle.js不会被忽略，但是又不想搜其中的东西，所以只好摘出来自定义了：
#+BEGIN_SRC emacs-lisp
  (defun slegetank/projectile-ag (&optional options)
    "Copy from counsel, and use .projectile"
    (interactive)
    (if (projectile-project-p)
        (let* ((options
                (if current-prefix-arg
                    (read-string "options: ")
                  options))
               (ignored
                (append
                 (cl-union (projectile-ignored-files-rel) grep-find-ignored-files)
                 (cl-union (projectile-ignored-directories-rel) grep-find-ignored-directories)))
               (options
                (concat options " "
                        (mapconcat (lambda (i)
                                     (concat "--ignore " (shell-quote-argument i)))
                                   ignored
                                   " "))))
          (counsel-ag (eval counsel-projectile-ag-initial-input)
                      (projectile-project-root)
                      options
                      (projectile-prepend-project-name "ag")))
      (user-error "You're not in a project")))
#+END_SRC
* notes
#+BEGIN_SRC emacs-lisp
  (defun custom-note-init (filename)
    "Init a note."
    (interactive (list (read-string (format "Enter new note name: %s%s-" default-directory  (format-time-string "%Y%m%d" (current-time))))))
    (if (string= "" filename)
        (message "Need a filename")
      (or (string-match "\\.org$" filename) (setq filename (concat (file-name-sans-extension filename) ".org")))
      (progn (setq filepath (format "%s%s-%s" default-directory (format-time-string "%Y%m%d" (current-time)) filename))
             (find-file filepath)
             (let ((custom-org-buffer (get-file-buffer filepath))
                   (user-name (s-trim-right (shell-command-to-string "git config --global user.name") ))
                   (user-email (s-trim-right (shell-command-to-string "git config --global user.email") )))
               (with-current-buffer custom-org-buffer
                 (insert (format "#+TITLE: \n#+AUTHOR: %s\n#+EMAIL: %s\n#+DATE: %s\n" user-name user-email (format-time-string "<%Y-%m-%d %H:%M>" (current-time))))
                 (goto-char 9))))))
#+END_SRC
* keys
#+BEGIN_SRC emacs-lisp
  (evil-leader/set-key
    "pf" 'counsel-projectile-find-file
    "pd" 'counsel-projectile-find-dir
    "pb" 'counsel-projectile-switch-to-buffer
    "pp" 'counsel-projectile-switch-project
    "pn" 'custom-note-init)
    (define-key evil-motion-state-map (kbd "s-F") 'counsel-ag)
#+END_SRC

